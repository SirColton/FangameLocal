<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Init Variables
select = 1; // Pointer Position
vertical_s = 60; // Vertical Seperation
settingKey = false // Currently Setting a Key?

// Option Names
str_i[1] = "Left Button";
str_i[2] = "Right Button";
str_i[3] = "Up Button";
str_i[4] = "Down Button";
str_i[5] = "Shoot Button";
str_i[6] = "Jump Button";
str_i[7] = "Restart Button";
str_i[8] = "Skip Button";

str[1] = controlIndex(global.leftbutton);
str[2] = controlIndex(global.rightbutton);
str[3] = controlIndex(global.upbutton);
str[4] = controlIndex(global.downbutton);
str[5] = controlIndex(global.shotbutton);
str[6] = controlIndex(global.jumpbutton);
str[7] = controlIndex(global.restartbutton);
str[8] = controlIndex(global.skipbutton);

xx=224;
xxx=432+64;
yy=48;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Check if currently setting a key
if settingKey = false {

// Press Up
if(keyboard_check_pressed(vk_up) == true){
audio_play_sound(sndJump,0,0);
  select -= 1;
  if(select &lt; 1){
    select = 8;
  }
// Press Down
}else if(keyboard_check_pressed(vk_down) == true){
  audio_play_sound(sndJump,0,0);
  select += 1;
  if(select &gt; 8){
    select = 1;
  }

// Press Shift
}else if(keyboard_check_pressed(vk_shift) == true){
settingKey = true;
    
// Press Shoot
} else if(keyboard_check_pressed(ord("Z")) == true){ saveGlobals(); room_goto(rOption); }

} else { 
// Invalid Keys
if !keyboard_check_pressed(vk_f1) and !keyboard_check_pressed(vk_f2) and !keyboard_check_pressed(vk_f3) and !keyboard_check_pressed(vk_f4)
and !keyboard_check_pressed(vk_f5) and !keyboard_check_pressed(vk_f6) and !keyboard_check_pressed(vk_f7) and !keyboard_check_pressed(vk_f8)
and !keyboard_check_pressed(vk_f9) and !keyboard_check_pressed(vk_f10) and !keyboard_check_pressed(vk_f11) and !keyboard_check_pressed(vk_f12)
and !keyboard_check_pressed(vk_escape) and !keyboard_check_pressed(vk_printscreen) and !keyboard_check_pressed(vk_pause) and !keyboard_check_pressed(91) 
and !keyboard_check_pressed(93) and !keyboard_check_pressed(144) and !keyboard_check_pressed(145) and !keyboard_check_pressed(20)
{
// Input Valid Keys
if keyboard_check_pressed(vk_anykey){
if select = 1 { global.leftbutton = keyboard_key; }
else if select = 2 { global.rightbutton = keyboard_key; }
else if select = 3 { global.upbutton = keyboard_key; }
else if select = 4 { global.downbutton = keyboard_key; }
else if select = 5 { global.shotbutton = keyboard_key; }
else if select = 6 { global.jumpbutton = keyboard_key; }
else if select = 7 { global.restartbutton = keyboard_key; }
else if select = 8 { global.skipbutton = keyboard_key; }
settingKey = false;
} }
}


// Update
str[1] = controlIndex(global.leftbutton);
str[2] = controlIndex(global.rightbutton);
str[3] = controlIndex(global.upbutton);
str[4] = controlIndex(global.downbutton);
str[5] = controlIndex(global.shotbutton);
str[6] = controlIndex(global.jumpbutton);
str[7] = controlIndex(global.restartbutton);
str[8] = controlIndex(global.skipbutton);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Init Variables
var i;

// Check if currently setting a key
if settingKey = false {

    // For Loop to Create Selections
    for(i = 1; i &lt;= 8; i += 1){
      draw_set_color(c_black);
      draw_set_halign(fa_left);
      draw_set_font(font24b);
      draw_text(xx,yy+(i-1)*vertical_s+32,str_i[i]);
    
    // Menu Pointer
        if(i == select){
        draw_sprite(sprPlayerIdle,0,xx-32,yy+(i-1)*vertical_s+40);
      }
    }

    // For Loop to Create Selections
    for(i = 1; i &lt;= 8; i += 1){
      draw_set_color(c_dkgray);
      draw_set_halign(fa_left);
      draw_set_font(font24b);
      draw_text(xxx,yy+(i-1)*vertical_s+32,str[i]);
    } 
} else {
    // Input Key
    draw_set_color(c_black);
    draw_set_font(font24b);
    draw_set_halign(fa_center);
    draw_text(400,238,"Press a key . . .");
}

// Info
draw_set_font(font12);
draw_set_halign(fa_left);
draw_text(32,568,"[ " + controlIndex(global.shotbutton) + " ] Back");
draw_set_halign(fa_right);
draw_text(768,568,"[ " + controlIndex(global.jumpbutton) + " ] Accept");
draw_set_halign(fa_left);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
